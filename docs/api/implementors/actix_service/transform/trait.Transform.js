(function() {var implementors = {};
implementors["actix_identity"] = [{"text":"impl&lt;S, T, B&gt; <a class=\"trait\" href=\"actix_service/transform/trait.Transform.html\" title=\"trait actix_service::transform::Transform\">Transform</a>&lt;S, <a class=\"struct\" href=\"actix_web/service/struct.ServiceRequest.html\" title=\"struct actix_web::service::ServiceRequest\">ServiceRequest</a>&gt; for <a class=\"struct\" href=\"actix_identity/struct.IdentityService.html\" title=\"struct actix_identity::IdentityService\">IdentityService</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"actix_web/service/struct.ServiceRequest.html\" title=\"struct actix_web::service::ServiceRequest\">ServiceRequest</a>, Response = <a class=\"struct\" href=\"actix_web/service/struct.ServiceResponse.html\" title=\"struct actix_web::service::ServiceResponse\">ServiceResponse</a>&lt;B&gt;, Error = <a class=\"struct\" href=\"actix_web/error/error/struct.Error.html\" title=\"struct actix_web::error::error::Error\">Error</a>&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Future\" title=\"type actix_service::Service::Future\">Future</a>: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"actix_identity/trait.IdentityPolicy.html\" title=\"trait actix_identity::IdentityPolicy\">IdentityPolicy</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"actix_http/body/message_body/trait.MessageBody.html\" title=\"trait actix_http::body::message_body::MessageBody\">MessageBody</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"type\" href=\"actix_http/body/message_body/trait.MessageBody.html#associatedtype.Error\" title=\"type actix_http::body::message_body::MessageBody::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">StdError</a>,&nbsp;</span>","synthetic":false,"types":["actix_identity::middleware::IdentityService"]}];
implementors["actix_session"] = [{"text":"impl&lt;S, B&gt; <a class=\"trait\" href=\"actix_service/transform/trait.Transform.html\" title=\"trait actix_service::transform::Transform\">Transform</a>&lt;S, <a class=\"struct\" href=\"actix_web/service/struct.ServiceRequest.html\" title=\"struct actix_web::service::ServiceRequest\">ServiceRequest</a>&gt; for <a class=\"struct\" href=\"actix_session/struct.CookieSession.html\" title=\"struct actix_session::CookieSession\">CookieSession</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"actix_web/service/struct.ServiceRequest.html\" title=\"struct actix_web::service::ServiceRequest\">ServiceRequest</a>, Response = <a class=\"struct\" href=\"actix_web/service/struct.ServiceResponse.html\" title=\"struct actix_web::service::ServiceResponse\">ServiceResponse</a>&lt;B&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Future\" title=\"type actix_service::Service::Future\">Future</a>: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"actix_service/trait.Service.html#associatedtype.Error\" title=\"type actix_service::Service::Error\">Error</a>: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"actix_http/body/message_body/trait.MessageBody.html\" title=\"trait actix_http::body::message_body::MessageBody\">MessageBody</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"type\" href=\"actix_http/body/message_body/trait.MessageBody.html#associatedtype.Error\" title=\"type actix_http::body::message_body::MessageBody::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">StdError</a>,&nbsp;</span>","synthetic":false,"types":["actix_session::cookie::CookieSession"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()