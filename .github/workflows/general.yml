name: Rust
defaults:
  run:
    working-directory: api
on: pull_request

env:
  CARGO_TERM_COLOR: always

jobs:
  update_docs:
    name: Update Docs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
          SQLX_FEATURES: postgres
          DATABASE_URL: postgres://postgres:password@localhost:5432/hermod
        ports:
          - 5432:5432
    env:
      SQLX_VERSION: 0.5.5
      SQLX_FEATURES: postgres
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.5.5 --locked sqlx-cli --no-default-features --features postgres
          SKIP_DOCKER=true ./scripts/init_db.sh
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --manifest-path api/Cargo.toml
      - name: Copy documentation output
        run: |
          cp -r target/doc/hermod/* ../docs/api/hermod

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          # Stage the file, commit and push
          git add ../docs/api/*
          git commit -m "Updated rustdocs"
          git push origin head

  update_sqlx_data:
    name: Update sqlx-data.json
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/hermod
      SQLX_VERSION: 0.5.5
      SQLX_FEATURES: postgres
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - uses: actions-rs/cargo@v1
        with:
          command: sqlx
          args: prepare -- --bin hermod --manifest-path api/Cargo.toml
      - uses: actions-x/commit@v2
        with:
          name: sqlx Bot
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:12
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         override: true
  #     - name: Migrate database
  #       run: |
  #         sudo apt-get install libpq-dev -y
  #         cargo install --version=0.5.5 --locked sqlx-cli --no-default-features --features postgres
  #         SKIP_DOCKER=true ./scripts/init_db.sh
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: test
  #         args: --manifest-path api/Cargo.toml
  # fmt:
  #   name: Rustfmt
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #         components: rustfmt
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --manifest-path api/Cargo.toml --all -- --check
  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:12
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #         components: clippy
  #     - name: Migrate database
  #       run: |
  #         sudo apt-get install libpq-dev -y
  #         cargo install --version=0.5.5 --locked sqlx-cli --no-default-features --features postgres
  #         SKIP_DOCKER=true ./scripts/init_db.sh
  #     - uses: actions-rs/clippy-check@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         args: --manifest-path api/Cargo.toml -- -D warnings
  # coverage:
  #   name: Code coverage
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:12
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #     - name: Migrate database
  #       run: |
  #         sudo apt-get install libpq-dev -y
  #         cargo install --version=0.5.5 --locked sqlx-cli --no-default-features --features postgres
  #         SKIP_DOCKER=true ./scripts/init_db.sh
  #     - name: Run cargo-tarpaulin
  #       uses: actions-rs/tarpaulin@v0.1
  #       with:
  #         args: "--manifest-path api/Cargo.toml --ignore-tests --avoid-cfg-tarpaulin"
